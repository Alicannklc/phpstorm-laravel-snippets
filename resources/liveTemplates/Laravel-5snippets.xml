<templateSet group="Laravel 5 snippets">
  <template name="Validator::resolver" value="Validator::resolver(function($translator, $data, $rules,$msgs){&#10;return new $END$($translator, $data, $rules, $msgs);&#10;});" description="Resolve a new Validator instance." toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Validator::make" value="Validator::make($data, $rules, $messages);" description="Create a new Validator instance." toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Validator::extend" value="Validator::extend($rule, $extension, $message);" description="Register a custom validator extension." toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::uuid" value="$table-&gt;uuid('id')-&gt;nullable()-&gt;default(null);" description="UUID equivalent to the tabl" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::tinyInteger" value="$table-&gt;tinyInteger('numbers');" description="TINYINT equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::timestamps" value="$table-&gt;timestamps();" description="Adds created_at and updated_at columns" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::timestamp" value="$table-&gt;timestamp('added_on')-&gt;nullable()-&gt;default(time());" description="TIMESTAMP equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::time" value="&#10;$table-&gt;time('sunrise')-&gt;nullable()-&gt;default(new DateTime());" description="TIME equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::text" value="$table-&gt;text('description')-&gt;nullable()-&gt;default('text');" description="TEXT equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::string" value="$table-&gt;string('name', 100)-&gt;nullable()-&gt;default('text');" description="VARCHAR equivalent with a length (optional)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::softDeletes" value="$table-&gt;softDeletes();" description="Adds deleted_at column for soft deletes" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::smallInteger" value="$table-&gt;smallInteger('votes')-&gt;nullable()-&gt;default(12);" description="SMALLINT equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::renameColumn" value="$table-&gt;renameColumn('from', 'to');" description="Rename a column" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::rememberToken" value="$table-&gt;rememberToken();" description="Adds remember_token as VARCHAR(100) NULL" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::morphs" value="$table-&gt;morphs('taggable');" description="Adds INTEGER taggable_id and STRING taggable_type" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::mediumText" value="$table-&gt;mediumText('mediumText')-&gt;nullable()-&gt;default('text');" description="MEDIUMTEXT equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::longText" value="$table-&gt;longText('description')-&gt;nullable()-&gt;default('text');" description="LONGTEXT equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::jsonb" value="$table-&gt;jsonb('column')-&gt;nullable();" description="JSON equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::integer" value=" $table-&gt;integer('votes')-&gt;unsigned()-&gt;nullable()-&gt;default(12);" description="INTEGER equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::index-unique" value="  $table-&gt;unique('column');" description="Add a unique index" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::index-primary" value="$table-&gt;primary('id');" description="Add a primary or array of composite keys" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::index" value="$table-&gt;index('column');" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::index-foreign" value="$table-&gt;foreign('user_id')-&gt;references('id')-&gt;on('users')-&gt;onDelete('cascade');" description="Add a Foreign Key to a table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::increments" value="$table-&gt;increments('$END$');" description="Incrementing ID" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::float" value="$table-&gt;float('amount')-&gt;nullable()-&gt;default(123.45);" description="FLOAT equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::enum" value="$table-&gt;enum('choices', ['foo', 'bar'])-&gt;nullable()-&gt;default(['foo', 'bar']);;" description="ENUM equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::dropUnique" value="$table-&gt;dropUnique('users_email_unique')" description="Drop a Unique Index" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::dropPrimary" value="$table-&gt;dropPrimary('users_id_primary');" description="Drop a Primary key" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::dropIndex" value="$table-&gt;dropIndex('geo_state_index');" description="Drop a basic Index" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::dropForeign" value="$table-&gt;dropForeign('posts_user_id_foreign');" description="Drop a Foreign Key" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::dropColumn" value="$table-&gt;dropColumn('column');" description="Drop a column" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::double" value="$table-&gt;double('column', 15, 8)-&gt;nullable()-&gt;default(123.4567);;" description="DOUBLE equivalent with precision" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::decimal" value="$table-&gt;double('amount', 5, 2)-&gt;nullable()-&gt;default(123.45);" description="DECIMAL equivalent with a precision and scale" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::dateTime" value="$table-&gt;dateTime('created_at')-&gt;nullable()-&gt;default(new DateTime());" description="DATETIME equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::date" value="$table-&gt;date('created_at')-&gt;nullable()-&gt;default(new DateTime());" description="DATE equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::char" value="$table-&gt;char('name', 4)4-&gt;default('text');" description="CHAR equivalent with a length (optional)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::boolean" value="$table-&gt;boolean('confirmed')-&gt;nullable()-&gt;default(false);" description="BOOLEAN equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::binary" value="$table-&gt;binary('data')-&gt;nullable()-&gt;default(12);" description="BLOB equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::bigInteger" value="$table-&gt;bigInteger('votes')-&gt;nullable()-&gt;default(12);" description="BIGINT equivalent to the table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Column::bigIncrements" value="$table-&gt;bigIncrements('id');" description="Incrementing ID using a \&quot;big integer\&quot; equivalent." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::type" value="Storage::type(filePath);" description="Get the file type of a given file." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::size" value="Storage::size(filePath);" description="Get the size of the file in bytes" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::put" value="Storage::put(filePath, $contents);" description="Store a file on disk" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::prepend" value="Storage::prepend(filePath, Prepended Text);" description="Insert content at the beginning of a file" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::name" value="Storage::name(filePath);" description="Extract the file name from a file path." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::move" value="Storage::move(path, target);" description="Move an existing file to a new location on the disk" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::mimeType" value="Storage::mimeType(path);" description="Get the mime-type of a given file." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::makeDirectory" value="Storage::makeDirectory(directory);" description="Will create the given directory, including any needed sub-directories" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::lastModified" value="Storage::lastModified(filePath);" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::iswritable" value="Storage::isWritable(path);" description="Determine if the given path is writable." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::isFile" value="Storage::isFile(path);" description="Determine if the given path is a directory." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::isDirectory" value="Storage::isDirectory(directory);" description="Determine if the given path is a directory." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::get" value="Storage::get(filePath);" description="Retrieve the contents of a given file" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::files" value="Storage::files(directory);" description="Returns an array of all of the files in a directory" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::extension" value="Storage::extension(filePath);" description="Extract the file extension from a file path." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::exists" value="Storage::exists(filePath);" description="Determine if a file exists" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::directories" value="Storage::directories(directory);" description="Returns an array of all the directories within a given directory" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::deleteDirectory" value="Storage::deleteDirectory(directory);" description="May be used to remove a directory, including all of its files, from the disk" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::delete" value="Storage::deleteDirectory(directory);" description="Remove one or multiple files from the disk" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::copy" value="Storage::copy(path, target);" description="Copy an existing file to another location on the disk" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::cleanDirectory" value="Storage::cleanDirectory(directory);" description="Empty the specified directory of all files and folders." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::append" value="Storage::append(filePath, Appended Text);" description="Insert content at the end of a file" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::allFiles" value="Storage::allFiles(directory);" description="Get all of the files from the given directory (recursive)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Storage::allDirectories" value="Storage::allDirectories(directory);" description="Returns an array of all the directories within a given directory and all of its sub-directories" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Mail::queue" value=" Mail::queue('Html.view$END$', $data, function ($message) {&#10;        $message-&gt;from('john@johndoe.com', 'John Doe');&#10;        $message-&gt;sender('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;to('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;cc('john@johndoe.com', 'John Doe');&#10;        $message-&gt;bcc('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;replyTo('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;subject('Subject');&#10;    &#10;        $message-&gt;priority(3);&#10;    &#10;        $message-&gt;attach('pathToFile');&#10;    });" description="Queue a new e-mail message for sending." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Mail::later" value="Mail::later(5$END$, 'Html.view', $data, function ($message) {&#10;        $message-&gt;from('john@johndoe.com', 'John Doe');&#10;        $message-&gt;sender('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;to('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;cc('john@johndoe.com', 'John Doe');&#10;        $message-&gt;bcc('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;replyTo('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;subject('Subject');&#10;    &#10;        $message-&gt;priority(3);&#10;    &#10;        $message-&gt;attach('pathToFile');&#10;    });" description="Queue a new e-mail message for sending after (n) seconds." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Mail::raw" value=" Mail::raw('plain text message$END$', function ($message) {&#10;        $message-&gt;from('john@johndoe.com', 'John Doe');&#10;        $message-&gt;sender('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;to('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;cc('john@johndoe.com', 'John Doe');&#10;        $message-&gt;bcc('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;replyTo('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;subject('Subject');&#10;    &#10;        $message-&gt;priority(3);&#10;    &#10;        $message-&gt;attach('pathToFile');&#10;    });" description="Send a new message when only a raw text part." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Mail::plain" value="Mail::plain('plainText.view$END$', $data, function ($message) {&#10;        $message-&gt;from('john@johndoe.com', 'John Doe');&#10;        $message-&gt;sender('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;to('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;cc('john@johndoe.com', 'John Doe');&#10;        $message-&gt;bcc('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;replyTo('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;subject('Subject');&#10;    &#10;        $message-&gt;priority(3);&#10;    &#10;        $message-&gt;attach('pathToFile');&#10;    });" description="Send a new message when only a plain part." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="Mail::laterOn" value="Mail::queueOn('queue-name'$END$, 5, 'Html.view', $data, function ($message) {&#10;        $message-&gt;from('john@johndoe.com', 'John Doe');&#10;        $message-&gt;sender('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;to('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;cc('john@johndoe.com', 'John Doe');&#10;        $message-&gt;bcc('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;replyTo('john@johndoe.com', 'John Doe');&#10;    &#10;        $message-&gt;subject('Subject');&#10;    &#10;        $message-&gt;priority(3);&#10;    &#10;        $message-&gt;attach('pathToFile');&#10;    });" description="Queue a new e-mail message for sending after (n) seconds on the given queue." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>
